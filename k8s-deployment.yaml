---
apiVersion: v1
kind: Namespace
metadata:
  name: messaging-app
---
# -----------------------
# Micro Sender
# -----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-sender
  namespace: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-sender
  template:
    metadata:
      labels:
        app: micro-sender
    spec:
      containers:
        - name: micro-sender
          image: rajatpal96/micro-sender:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://host.docker.internal:5432/messaging"
            - name: SPRING_DATASOURCE_USERNAME
              value: "user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "password"
            - name: RABBITMQ_HOST
              value: "host.docker.internal"
---
apiVersion: v1
kind: Service
metadata:
  name: micro-sender
  namespace: messaging-app
spec:
  selector:
    app: micro-sender
  ports:
    - port: 8080
      targetPort: 8080
---
# -----------------------
# Micro Recipient
# -----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-recipient
  namespace: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-recipient
  template:
    metadata:
      labels:
        app: micro-recipient
    spec:
      containers:
        - name: micro-recipient
          image: rajatpal96/micro-recipient:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://host.docker.internal:5432/messaging"
            - name: SPRING_DATASOURCE_USERNAME
              value: "user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "password"
            - name: RABBITMQ_HOST
              value: "host.docker.internal"
---
apiVersion: v1
kind: Service
metadata:
  name: micro-recipient
  namespace: messaging-app
spec:
  selector:
    app: micro-recipient
  ports:
    - port: 8080
      targetPort: 8080
---
# -----------------------
# Micro Collector
# -----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-collector
  namespace: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: micro-collector
  template:
    metadata:
      labels:
        app: micro-collector
    spec:
      containers:
        - name: micro-collector
          image: rajatpal96/micro-collector:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://host.docker.internal:5432/messaging"
            - name: SPRING_DATASOURCE_USERNAME
              value: "user"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "password"
            - name: RABBITMQ_HOST
              value: "host.docker.internal"
---
apiVersion: v1
kind: Service
metadata:
  name: micro-collector
  namespace: messaging-app
spec:
  selector:
    app: micro-collector
  ports:
    - port: 8080
      targetPort: 8080
---
# -----------------------
# Prometheus
# -----------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: messaging-app
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'spring-microservices'
        static_configs:
          - targets: ['micro-sender:8080','micro-recipient:8080','micro-collector:8080']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: messaging-app
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: NodePort
---
# -----------------------
# Grafana
# -----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: messaging-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: messaging-app
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
  type: NodePort